<?php

declare(strict_types=1);

namespace Testcontainers\Module\RabbitMQ;

use AMQPConnection;
use Testcontainers\GenericContainer;

final class RabbitMQContainer extends GenericContainer
{
    public function __construct(
        string $image = 'rabbitmq:3.8-management',
        public readonly string $user = 'guest',
        public readonly string $pass = 'guest',
        public readonly int $port = 5672
    ) {
        parent::__construct($image);

        $this
            ->withExposedPorts("{$port}/tcp")
            ->withEnv([
                'RABBITMQ_DEFAULT_USER' => $this->user,
                'RABBITMQ_DEFAULT_PASS' => $this->pass,
            ]);
    }

    public function getDsn(): string
    {
        return "amqp://{$this->user}:{$this->pass}@{$this->getHost()}:{$this->getFirstMappedPort()}";
    }

    public function createAmqp(): AMQPConnection
    {
        $amqp = new AMQPConnection();
        $amqp->setUser($this->user);
        $amqp->setPassword($this->pass);
        $amqp->setHost($this->getHost());
        $amqp->setPort($this->getFirstMappedPort());

        return $amqp;
    }

    public function start(int $wait = 15): self
    {
        return parent::start($wait); // TODO: Properly wait for RabbitMQ to be ready
    }
}
